# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: jon_shared_data_rec_osd.proto
# Protobuf Python Version: 5.29.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    2,
    '',
    'jon_shared_data_rec_osd.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import jon_shared_data_types_pb2 as jon__shared__data__types__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1djon_shared_data_rec_osd.proto\x12\x03ser\x1a\x1bjon_shared_data_types.proto\"\x94\x02\n\x10JonGuiDataRecOsd\x12+\n\x06screen\x18\x01 \x01(\x0e\x32\x1b.ser.JonGuiDataRecOsdScreen\x12\x18\n\x10heat_osd_enabled\x18\x02 \x01(\x08\x12\x17\n\x0f\x64\x61y_osd_enabled\x18\x03 \x01(\x08\x12(\n heat_crosshair_offset_horizontal\x18\x04 \x01(\x05\x12&\n\x1eheat_crosshair_offset_vertical\x18\x05 \x01(\x05\x12\'\n\x1f\x64\x61y_crosshair_offset_horizontal\x18\x06 \x01(\x05\x12%\n\x1d\x64\x61y_crosshair_offset_vertical\x18\x07 \x01(\x05\x42OZMgit-codecommit.eu-central-1.amazonaws.com/v1/repos/jettison/jonp/data/rec_osdb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'jon_shared_data_rec_osd_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'ZMgit-codecommit.eu-central-1.amazonaws.com/v1/repos/jettison/jonp/data/rec_osd'
  _globals['_JONGUIDATARECOSD']._serialized_start=68
  _globals['_JONGUIDATARECOSD']._serialized_end=344
# @@protoc_insertion_point(module_scope)
